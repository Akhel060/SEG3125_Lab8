{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anas\\\\Documents\\\\GitHub\\\\SEG3125_Lab8\\\\automotive-portal\\\\src\\\\pages\\\\TopicPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './TopicPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicPosts = () => {\n  _s();\n  const {\n    topicId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/posts?topicId=${topicId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Could not fetch posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [topicId]);\n  const deletePost = async postId => {\n    try {\n      const response = await fetch(`http://localhost:3001/api/posts/${postId}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      // Remove the post from the local state to update the UI\n      setPosts(posts.filter(post => post.id !== postId));\n    } catch (error) {\n      console.error(\"Could not delete post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Posts for Topic ID: \", topicId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 16\n          }, this), \" \", post.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `content-${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: `content-${post.id}`,\n            name: `content-${post.id}`,\n            value: post.content,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deletePost(post.id),\n          children: \"Delete Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicPosts, \"RRA8O5XLZ2X79Cdmss+gSJFmsog=\", false, function () {\n  return [useParams];\n});\n_c = TopicPosts;\nexport default TopicPosts;\nvar _c;\n$RefreshReg$(_c, \"TopicPosts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","TopicPosts","_s","topicId","posts","setPosts","fetchPosts","response","fetch","ok","Error","status","data","json","error","console","deletePost","postId","method","filter","post","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","htmlFor","name","value","content","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Anas/Documents/GitHub/SEG3125_Lab8/automotive-portal/src/pages/TopicPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './TopicPosts.css';\r\n\r\nconst TopicPosts = () => {\r\n  const { topicId } = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/api/posts?topicId=${topicId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Could not fetch posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [topicId]);\r\n\r\n  const deletePost = async (postId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/api/posts/${postId}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      // Remove the post from the local state to update the UI\r\n      setPosts(posts.filter(post => post.id !== postId));\r\n    } catch (error) {\r\n      console.error(\"Could not delete post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"posts-container\">\r\n      <h2>Posts for Topic ID: {topicId}</h2>\r\n      <div>\r\n        {posts.map(post => (\r\n          <div key={post.id} className=\"post-item\">\r\n            <p><strong>Post ID:</strong> {post.id}</p>\r\n            <label htmlFor={`content-${post.id}`}><strong>Content:</strong></label>\r\n            <p><textarea id={`content-${post.id}`} name={`content-${post.id}`} value={post.content} readOnly /></p>\r\n            <button onClick={() => deletePost(post.id)}>Delete Post</button>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}