{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anas\\\\Documents\\\\GitHub\\\\SEG3125_Lab8\\\\automotive-portal\\\\src\\\\pages\\\\TopicPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './TopicPosts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicPosts = () => {\n  _s();\n  const {\n    topicId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/posts?topicId=${topicId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Could not fetch posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [topicId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Posts for Topic ID: \", topicId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Post ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 16\n          }, this), \" \", post.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `content-${post.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Content:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: `content-${post.id}`,\n            name: `content-${post.id}`,\n            value: post.content,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicPosts, \"RRA8O5XLZ2X79Cdmss+gSJFmsog=\", false, function () {\n  return [useParams];\n});\n_c = TopicPosts;\nexport default TopicPosts;\nvar _c;\n$RefreshReg$(_c, \"TopicPosts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","TopicPosts","_s","topicId","posts","setPosts","fetchPosts","response","fetch","ok","Error","status","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","htmlFor","name","value","content","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Anas/Documents/GitHub/SEG3125_Lab8/automotive-portal/src/pages/TopicPosts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './TopicPosts.css';\r\n\r\nconst TopicPosts = () => {\r\n  const { topicId } = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/api/posts?topicId=${topicId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setPosts(data);\r\n      } catch (error) {\r\n        console.error(\"Could not fetch posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [topicId]);\r\n\r\n  return (\r\n    <div className=\"posts-container\"> {}\r\n      <h2>Posts for Topic ID: {topicId}</h2>\r\n      <div>\r\n        {posts.map(post => (\r\n          <div key={post.id} className=\"post-item\"> {}\r\n            <p><strong>Post ID:</strong> {post.id}</p>\r\n            <label htmlFor={`content-${post.id}`}><strong>Content:</strong></label>\r\n            <p><textarea id={`content-${post.id}`} name={`content-${post.id}`} value={post.content} readOnly /></p>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}