{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anas\\\\Documents\\\\GitHub\\\\SEG3125_Lab8\\\\automotive-portal\\\\src\\\\pages\\\\CommunityForum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './CommunityForum.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityForum = () => {\n  _s();\n  const [topics, setTopics] = useState([\n  // Initial topic structure without posts count\n  {\n    id: 1,\n    title: 'Best Electric Cars 2024',\n    lastPost: 'Today at 10:45 AM'\n  }, {\n    id: 2,\n    title: 'Upcoming Automotive Shows',\n    lastPost: 'Yesterday at 6:20 PM'\n  }, {\n    id: 3,\n    title: 'DIY Maintenance Tips',\n    lastPost: 'March 15, 2024'\n  }, {\n    id: 4,\n    title: 'How to Choose Your First Electric Vehicle',\n    lastPost: '2 hours ago'\n  }, {\n    id: 5,\n    title: 'Future of Self-Driving Cars',\n    lastPost: 'April 10, 2024'\n  }]);\n  useEffect(() => {\n    const fetchPostsCount = async () => {\n      try {\n        const responses = await Promise.all(topics.map(topic => fetch(`http://localhost:3001/api/posts?topicId=${topic.id}`)));\n        const postsCounts = await Promise.all(responses.map(res => res.json()));\n        const updatedTopics = topics.map((topic, index) => ({\n          ...topic,\n          posts: postsCounts[index].length // Assuming the endpoint returns an array of posts\n        }));\n        setTopics(updatedTopics);\n      } catch (error) {\n        console.error('Error fetching posts count:', error);\n      }\n    };\n    fetchPostsCount();\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  const addPost = async (topicId, postContent) => {\n    try {\n      const response = await fetch('http://localhost:3001/api/posts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          topicId,\n          content: postContent\n        })\n      });\n      if (response.ok) {\n        // Assuming the POST request successfully adds a post\n        const addedPost = await response.json(); // Ensure your backend returns the added post with a timestamp\n        console.log('Post added successfully', addedPost);\n\n        // Update the state based on the previous state\n        setTopics(prevTopics => prevTopics.map(topic => {\n          if (topic.id === topicId) {\n            // Update the post count and last post timestamp for the matching topic\n            const newLastPostTimestamp = new Date().toLocaleString(); // Format the timestamp as you prefer\n            return {\n              ...topic,\n              posts: topic.posts + 1,\n              lastPost: newLastPostTimestamp\n            };\n          }\n          return topic;\n        }));\n      } else {\n        console.error('Failed to add post');\n      }\n    } catch (error) {\n      console.error('Error adding post:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Community Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"forum-introduction\",\n      children: \"Welcome to the Automotive Community Forum. Dive into discussions on your favorite automotive topics, share your experiences, and get advice from fellow enthusiasts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"topic-list\",\n      children: topics.map(topic => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"topic-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"topic-title\",\n          children: topic.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"topic-info\",\n          children: [\"Posts: \", topic.posts, \" | Last Post: \", topic.lastPost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const postContent = e.target.elements.postContent.value;\n            addPost(topic.id, postContent);\n            e.target.elements.postContent.value = '';\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"postContent\",\n            className: \"post-input\",\n            placeholder: \"Write a post...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"post-submit\",\n            children: \"Add Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/topic/${topic.id}/posts`,\n          className: \"view-posts-btn\",\n          children: \"View Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, topic.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityForum, \"c4TMbGb08MPJS68VzPhaT+XVKqk=\");\n_c = CommunityForum;\nexport default CommunityForum;\nvar _c;\n$RefreshReg$(_c, \"CommunityForum\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","CommunityForum","_s","topics","setTopics","id","title","lastPost","fetchPostsCount","responses","Promise","all","map","topic","fetch","postsCounts","res","json","updatedTopics","index","posts","length","error","console","addPost","topicId","postContent","response","method","headers","body","JSON","stringify","content","ok","addedPost","log","prevTopics","newLastPostTimestamp","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","target","elements","value","type","name","placeholder","required","to","_c","$RefreshReg$"],"sources":["C:/Users/Anas/Documents/GitHub/SEG3125_Lab8/automotive-portal/src/pages/CommunityForum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './CommunityForum.css';\r\n\r\nconst CommunityForum = () => {\r\n  const [topics, setTopics] = useState([\r\n    // Initial topic structure without posts count\r\n    { id: 1, title: 'Best Electric Cars 2024', lastPost: 'Today at 10:45 AM' },\r\n    { id: 2, title: 'Upcoming Automotive Shows', lastPost: 'Yesterday at 6:20 PM' },\r\n    { id: 3, title: 'DIY Maintenance Tips', lastPost: 'March 15, 2024' },\r\n    { id: 4, title: 'How to Choose Your First Electric Vehicle', lastPost: '2 hours ago' },\r\n    { id: 5, title: 'Future of Self-Driving Cars', lastPost: 'April 10, 2024' },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const fetchPostsCount = async () => {\r\n      try {\r\n        const responses = await Promise.all(\r\n          topics.map(topic =>\r\n            fetch(`http://localhost:3001/api/posts?topicId=${topic.id}`)\r\n          )\r\n        );\r\n        const postsCounts = await Promise.all(responses.map(res => res.json()));\r\n\r\n        const updatedTopics = topics.map((topic, index) => ({\r\n          ...topic,\r\n          posts: postsCounts[index].length, // Assuming the endpoint returns an array of posts\r\n        }));\r\n\r\n        setTopics(updatedTopics);\r\n      } catch (error) {\r\n        console.error('Error fetching posts count:', error);\r\n      }\r\n    };\r\n\r\n    fetchPostsCount();\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  const addPost = async (topicId, postContent) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ topicId, content: postContent }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Assuming the POST request successfully adds a post\r\n        const addedPost = await response.json(); // Ensure your backend returns the added post with a timestamp\r\n        console.log('Post added successfully', addedPost);\r\n  \r\n        // Update the state based on the previous state\r\n        setTopics(prevTopics => prevTopics.map(topic => {\r\n          if (topic.id === topicId) {\r\n            // Update the post count and last post timestamp for the matching topic\r\n            const newLastPostTimestamp = new Date().toLocaleString(); // Format the timestamp as you prefer\r\n            return { ...topic, posts: topic.posts + 1, lastPost: newLastPostTimestamp };\r\n          }\r\n          return topic;\r\n        }));\r\n      } else {\r\n        console.error('Failed to add post');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forum-container\">\r\n      <h1>Community Forum</h1>\r\n      <p className=\"forum-introduction\">\r\n        Welcome to the Automotive Community Forum. Dive into discussions on your favorite automotive topics, share your experiences, and get advice from fellow enthusiasts.\r\n      </p>\r\n      <ul className=\"topic-list\">\r\n        {topics.map((topic) => (\r\n          <li key={topic.id} className=\"topic-item\">\r\n            <h2 className=\"topic-title\">{topic.title}</h2>\r\n            <p className=\"topic-info\">Posts: {topic.posts} | Last Post: {topic.lastPost}</p>\r\n            <form onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const postContent = e.target.elements.postContent.value;\r\n              addPost(topic.id, postContent);\r\n              e.target.elements.postContent.value = '';\r\n            }}>\r\n              <input type=\"text\" name=\"postContent\" className=\"post-input\" placeholder=\"Write a post...\" required />\r\n              <button type=\"submit\" className=\"post-submit\">Add Post</button>\r\n            </form>\r\n            <Link to={`/topic/${topic.id}/posts`} className=\"view-posts-btn\">View Posts</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityForum;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}